-- MySQL Script generated by MySQL Workbench
-- Sun May 14 13:21:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering



-- -----------------------------------------------------
-- Schema Ferrementum
-- -----------------------------------------------------
-- Base de datos de Ferrementum

-- -----------------------------------------------------
-- Schema Ferrementum
--
-- Base de datos de Ferrementum
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Ferrementum` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `Ferrementum` ;

-- -----------------------------------------------------
-- Table `tipo_docs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipo_docs` (
  `idtipo_docs` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria del tipo de documentos',
  `nom_tipo_docs` VARCHAR(45) NOT NULL COMMENT 'Nombre del tipo de documento',
  PRIMARY KEY (`idtipo_docs`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles` (
  `idroles` INT NOT NULL COMMENT 'Clave primaria del rol',
  `nom_rol` VARCHAR(45) NOT NULL COMMENT 'Nombre del rol',
  PRIMARY KEY (`idroles`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dominios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dominios` (
  `iddominios` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria de la tabla dominios',
  `nom_dominios` VARCHAR(45) NOT NULL COMMENT 'Nombre del dominio',
  PRIMARY KEY (`iddominios`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuarios` (
  `num_doc` INT NOT NULL COMMENT 'Número de documento de identidad del usuario',
  `seudonimo` VARCHAR(20) NOT NULL COMMENT 'Nombre del usuario. No es nombre completo, sino seudonimo',
  `nombre_us` VARCHAR(45) NOT NULL COMMENT 'Nombre del usuario',
  `apellido_us` VARCHAR(45) NOT NULL COMMENT 'Apellidos del usuario',
  `clave` VARCHAR(20) NOT NULL COMMENT 'Contraseña de ingreso a la plataforma',
  `tel_principal` INT NOT NULL COMMENT 'Telefono principal de contacto',
  `tipo_docs_idtipo_docs` INT NOT NULL,
  `roles_idroles` INT NOT NULL,
  `dominios_iddominios` INT NOT NULL,
  PRIMARY KEY (`num_doc`, `tipo_docs_idtipo_docs`, `roles_idroles`, `dominios_iddominios`),
  INDEX `fk_usuarios_tipo_docs_idx` (`tipo_docs_idtipo_docs` ASC) ,
  INDEX `fk_usuarios_roles1_idx` (`roles_idroles` ASC) ,
  INDEX `fk_usuarios_dominios1_idx` (`dominios_iddominios` ASC) ,
  CONSTRAINT `fk_usuarios_tipo_docs`
    FOREIGN KEY (`tipo_docs_idtipo_docs`)
    REFERENCES `tipo_docs` (`idtipo_docs`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_roles1`
    FOREIGN KEY (`roles_idroles`)
    REFERENCES `roles` (`idroles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_dominios1`
    FOREIGN KEY (`dominios_iddominios`)
    REFERENCES `dominios` (`iddominios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `carritos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `carritos` (
  `idcarritos` INT NOT NULL COMMENT 'Llave primaria del carrito de compras',
  `usuarios_num_doc` INT NOT NULL,
  PRIMARY KEY (`idcarritos`, `usuarios_num_doc`),
  INDEX `fk_carritos_usuarios1_idx` (`usuarios_num_doc` ASC) ,
  CONSTRAINT `fk_carritos_usuarios1`
    FOREIGN KEY (`usuarios_num_doc`)
    REFERENCES `usuarios` (`num_doc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `marcas_prod`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `marcas_prod` (
  `idmarcas_prod` INT NOT NULL COMMENT 'Llave primaria de la tabla',
  `marcas_prodcol` VARCHAR(45) NOT NULL COMMENT 'Nombre de la marca',
  PRIMARY KEY (`idmarcas_prod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `categorias` (
  `idcategorias` INT NOT NULL COMMENT 'Llave primaria de categorias',
  `categoriascol` VARCHAR(45) NOT NULL COMMENT 'Nombre de la categoria',
  PRIMARY KEY (`idcategorias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `subcategorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `subcategorias` (
  `id_subcategorias` INT NOT NULL COMMENT 'Llave primaria de subcategorias',
  `subcategoriascol` VARCHAR(45) NOT NULL COMMENT 'Nombre de la subcategoria',
  `categorias_idcategorias` INT NOT NULL,
  PRIMARY KEY (`id_subcategorias`, `categorias_idcategorias`),
  INDEX `fk_subcategorias_categorias1_idx` (`categorias_idcategorias` ASC) ,
  CONSTRAINT `fk_subcategorias_categorias1`
    FOREIGN KEY (`categorias_idcategorias`)
    REFERENCES `categorias` (`idcategorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productos` (
  `idproductos` INT NOT NULL COMMENT 'Llave primaria de productos',
  `nombre_prod` VARCHAR(45) NOT NULL COMMENT 'Nombre del producto',
  `referencia_prod` VARCHAR(45) NOT NULL COMMENT 'Referencia del producto',
  `descrip_prod` TEXT NOT NULL COMMENT 'Descripción del producto',
  `precio_prod` INT NOT NULL COMMENT 'Valor comercial del producto unitario',
  `cantidad_prod` VARCHAR(45) NOT NULL COMMENT 'Cantidad de productos en stock',
  `imagenes` JSON NOT NULL COMMENT 'Imagenes del producto',
  `marcas_prod_idmarcas_prod` INT NOT NULL,
  `subcategorias_id_subcategorias` INT NOT NULL,
  PRIMARY KEY (`idproductos`, `marcas_prod_idmarcas_prod`, `subcategorias_id_subcategorias`),
  INDEX `fk_productos_marcas_prod1_idx` (`marcas_prod_idmarcas_prod` ASC) ,
  INDEX `fk_productos_subcategorias1_idx` (`subcategorias_id_subcategorias` ASC) ,
  CONSTRAINT `fk_productos_marcas_prod1`
    FOREIGN KEY (`marcas_prod_idmarcas_prod`)
    REFERENCES `marcas_prod` (`idmarcas_prod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productos_subcategorias1`
    FOREIGN KEY (`subcategorias_id_subcategorias`)
    REFERENCES `subcategorias` (`id_subcategorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productos_carrito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productos_carrito` (
  `idproductos_carrito` INT NOT NULL AUTO_INCREMENT COMMENT 'Llabe primaria de la tabla',
  `cantidad_prod` INT NOT NULL COMMENT 'Cantidad de productos en el carrito',
  `total` INT NOT NULL COMMENT 'Total = cantidad_prod * precio_prod',
  `carritos_idcarritos` INT NOT NULL,
  `productos_idproductos` INT NOT NULL,
  PRIMARY KEY (`idproductos_carrito`, `carritos_idcarritos`, `productos_idproductos`),
  INDEX `fk_productos_carrito_carritos1_idx` (`carritos_idcarritos` ASC) ,
  INDEX `fk_productos_carrito_productos1_idx` (`productos_idproductos` ASC) ,
  CONSTRAINT `fk_productos_carrito_carritos1`
    FOREIGN KEY (`carritos_idcarritos`)
    REFERENCES `carritos` (`idcarritos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productos_carrito_productos1`
    FOREIGN KEY (`productos_idproductos`)
    REFERENCES `productos` (`idproductos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mod_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mod_categoria` (
  `idmod_categoria` INT NOT NULL COMMENT 'Llave primaria de modificar categoria',
  `fecha_mc` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Fecha en la que se modifico categoria',
  `usuarios_num_doc` INT NOT NULL,
  `categorias_idcategorias` INT NOT NULL,
  PRIMARY KEY (`idmod_categoria`, `usuarios_num_doc`, `categorias_idcategorias`),
  INDEX `fk_mod_categoria_usuarios1_idx` (`usuarios_num_doc` ASC) ,
  INDEX `fk_mod_categoria_categorias1_idx` (`categorias_idcategorias` ASC) ,
  CONSTRAINT `fk_mod_categoria_usuarios1`
    FOREIGN KEY (`usuarios_num_doc`)
    REFERENCES `usuarios` (`num_doc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mod_categoria_categorias1`
    FOREIGN KEY (`categorias_idcategorias`)
    REFERENCES `categorias` (`idcategorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mod_prods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mod_prods` (
  `idmod_prod` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primariaa de modificar subcategorias',
  `fecha_mod` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  COMMENT 'Fecha en la que se modifica subcategoria',
  `productos_idproductos` INT NOT NULL,
  `usuarios_num_doc` INT NOT NULL,
  PRIMARY KEY (`idmod_prod`, `productos_idproductos`, `usuarios_num_doc`),
  INDEX `fk_mod_subcat_productos1_idx` (`productos_idproductos` ASC) ,
  INDEX `fk_mod_prods_usuarios1_idx` (`usuarios_num_doc` ASC) ,
  CONSTRAINT `fk_mod_subcat_productos1`
    FOREIGN KEY (`productos_idproductos`)
    REFERENCES `productos` (`idproductos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mod_prods_usuarios1`
    FOREIGN KEY (`usuarios_num_doc`)
    REFERENCES `usuarios` (`num_doc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mod_subcats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mod_subcats` (
  `idmod_subcats` INT NOT NULL,
  `fecha_mod_scs` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  COMMENT 'Fecha de modificación de subcategorias',
  `usuarios_num_doc` INT NOT NULL, 
  `subcategorias_id_subcategorias` INT NOT NULL,
  PRIMARY KEY (`idmod_subcats`, `usuarios_num_doc`, `subcategorias_id_subcategorias`),
  INDEX `fk_mod_subcats_usuarios1_idx` (`usuarios_num_doc`  ASC) ,
  INDEX `fk_mod_subcats_subcategorias1_idx` (`subcategorias_id_subcategorias` ASC) ,
  CONSTRAINT `fk_mod_subcats_usuarios1`
    FOREIGN KEY (`usuarios_num_doc` )
    REFERENCES `usuarios` (`num_doc` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mod_subcats_subcategorias1`
    FOREIGN KEY (`subcategorias_id_subcategorias`)
    REFERENCES `subcategorias` (`id_subcategorias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comentarios` (
  `idcomentarios` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria de tabla de comentarios',
  `comentarioscol` VARCHAR(45) NOT NULL COMMENT 'Comentario que realiza un usuario sobre un producto',
  `usuarios_num_doc` INT NOT NULL,
  `productos_idproductos` INT NOT NULL,
  PRIMARY KEY (`idcomentarios`, `usuarios_num_doc`, `productos_idproductos`),
  INDEX `fk_comentarios_usuarios1_idx` (`usuarios_num_doc` ASC) ,
  INDEX `fk_comentarios_productos1_idx` (`productos_idproductos` ASC) ,
  CONSTRAINT `fk_comentarios_usuarios1`
    FOREIGN KEY (`usuarios_num_doc`)
    REFERENCES `usuarios` (`num_doc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_productos1`
    FOREIGN KEY (`productos_idproductos`)
    REFERENCES `productos` (`idproductos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `respuestas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `respuestas` (
  `idrespuestas` INT NOT NULL COMMENT 'Llave primaria de reacciones',
  `respuestascol` VARCHAR(45) NOT NULL COMMENT 'Respuesta elaborada a un comentario',
  `comentarios_idcomentarios` INT NOT NULL,
  PRIMARY KEY (`idrespuestas`, `comentarios_idcomentarios`),
  INDEX `fk_respuestas_comentarios1_idx` (`comentarios_idcomentarios` ASC) ,
  CONSTRAINT `fk_respuestas_comentarios1`
    FOREIGN KEY (`comentarios_idcomentarios`)
    REFERENCES `comentarios` (`idcomentarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compras` (
  `idcompras` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria de compras',
  `valor_comp` INT NOT NULL COMMENT 'Valor de la compra',
  `fecha_comp` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  COMMENT 'Fecha en la que se realizo la compra',
  `carritos_idcarritos` INT NOT NULL,
  PRIMARY KEY (`idcompras`, `carritos_idcarritos`),
  INDEX `fk_compras_carritos1_idx` (`carritos_idcarritos` ASC) ,
  CONSTRAINT `fk_compras_carritos1`
    FOREIGN KEY (`carritos_idcarritos`)
    REFERENCES `carritos` (`idcarritos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medios_pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medios_pago` (
  `idmedios_pago` INT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria de medios de pago',
  `medios_pagocol` VARCHAR(45) NOT NULL COMMENT 'Nombre del medio de pago',
  PRIMARY KEY (`idmedios_pago`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medios_pago_has_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medios_pago_has_compras` (
  `medios_pago_idmedios_pago` INT NOT NULL,
  `compras_idcompras` INT NOT NULL,
  PRIMARY KEY (`medios_pago_idmedios_pago`, `compras_idcompras`),
  INDEX `fk_medios_pago_has_compras_compras1_idx` (`compras_idcompras` ASC) ,
  INDEX `fk_medios_pago_has_compras_medios_pago1_idx` (`medios_pago_idmedios_pago` ASC) ,
  CONSTRAINT `fk_medios_pago_has_compras_medios_pago1`
    FOREIGN KEY (`medios_pago_idmedios_pago`)
    REFERENCES `medios_pago` (`idmedios_pago`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medios_pago_has_compras_compras1`
    FOREIGN KEY (`compras_idcompras`)
    REFERENCES `compras` (`idcompras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estado_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estado_compras` (
  `idestado_compras` INT NOT NULL AUTO_INCREMENT,
  `estado_comprascol` VARCHAR(45) NOT NULL COMMENT 'Nombre del estado de la compra',
  `compras_idcompras` INT NOT NULL,
  PRIMARY KEY (`idestado_compras`, `compras_idcompras`),
  INDEX `fk_estado_compras_compras1_idx` (`compras_idcompras` ASC) ,
  CONSTRAINT `fk_estado_compras_compras1`
    FOREIGN KEY (`compras_idcompras`)
    REFERENCES `compras` (`idcompras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipos_direcc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipos_direcc` (
  `idtipos_direcc` INT NOT NULL AUTO_INCREMENT,
  `nom_tipo_direcc` VARCHAR(45) NOT NULL DEFAULT 'Nombre del tipo de dirección',
  PRIMARY KEY (`idtipos_direcc`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vias` (
  `idvias` INT NOT NULL AUTO_INCREMENT,
  `viascol` VARCHAR(45) NOT NULL DEFAULT 'Nombre de la via',
  PRIMARY KEY (`idvias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cardinalidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cardinalidades` (
  `idcardinalidades` INT NOT NULL,
  `cardinalidadescol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idcardinalidades`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prefijos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prefijos` (
  `idprefijos` INT NOT NULL AUTO_INCREMENT,
  `prefijoscol` VARCHAR(45) NOT NULL DEFAULT 'Nombre del prefijo',
  PRIMARY KEY (`idprefijos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `departamentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `departamentos` (
  `iddepartamentos` INT NOT NULL,
  `departamentoscol` VARCHAR(45) NOT NULL DEFAULT 'Nombre del departamento',
  PRIMARY KEY (`iddepartamentos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ciudades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ciudades` (
  `idciudades` INT NOT NULL AUTO_INCREMENT,
  `ciudadescol` VARCHAR(45) NOT NULL,
  `departamentos_iddepartamentos` INT NOT NULL,
  PRIMARY KEY (`idciudades`, `departamentos_iddepartamentos`),
  INDEX `fk_ciudades_departamentos1_idx` (`departamentos_iddepartamentos` ASC) ,
  CONSTRAINT `fk_ciudades_departamentos1`
    FOREIGN KEY (`departamentos_iddepartamentos`)
    REFERENCES `departamentos` (`iddepartamentos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `domicilios_direcc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `domicilios_direcc` (
  `iddomicilios` INT NOT NULL,
  `num_via_pr` INT NULL COMMENT 'Número de via principal',
  `numero_via_gen` INT NULL COMMENT 'Número de vía generadora',
  `num_placa` VARCHAR(45) NULL COMMENT 'Número de placa',
  `complemento` TEXT NULL COMMENT 'Complemento de dirección estandarizada o no',
  `tipos_direcc_idtipos_direcc` INT NOT NULL,
  `vias_idvias` INT NULL COMMENT 'Via principal',
  `vias_idvias_sec` INT NULL COMMENT 'Via secundaria',
  `cardinalidades_idcardinalidades` INT NULL,
  `cardinalidades_idcardinalidadessec` INT NULL,
  `prefijos_idprefijos` INT NULL,
  `prefijos_idprefijossec` INT NULL,
  `ciudades_idciudades` INT NOT NULL,
  `ciudades_departamentos_iddepartamentos` INT NOT NULL,
  `barrio_verda` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iddomicilios`, `tipos_direcc_idtipos_direcc`, `ciudades_idciudades`, `ciudades_departamentos_iddepartamentos`),
  INDEX `fk_domicilios_direcc_tipos_direcc1_idx` (`tipos_direcc_idtipos_direcc` ASC) ,
  INDEX `fk_domicilios_direcc_vias1_idx` (`vias_idvias` ASC) ,
  INDEX `fk_domicilios_direcc_vias2_idx` (`vias_idvias_sec` ASC) ,
  INDEX `fk_domicilios_direcc_cardinalidades1_idx` (`cardinalidades_idcardinalidades` ASC) ,
  INDEX `fk_domicilios_direcc_cardinalidades2_idx` (`cardinalidades_idcardinalidadessec` ASC) ,
  INDEX `fk_domicilios_direcc_prefijos1_idx` (`prefijos_idprefijos` ASC) ,
  INDEX `fk_domicilios_direcc_prefijos2_idx` (`prefijos_idprefijossec` ASC) ,
  INDEX `fk_domicilios_direcc_ciudades1_idx` (`ciudades_idciudades` ASC, `ciudades_departamentos_iddepartamentos` ASC) ,
  CONSTRAINT `fk_domicilios_direcc_tipos_direcc1`
    FOREIGN KEY (`tipos_direcc_idtipos_direcc`)
    REFERENCES `tipos_direcc` (`idtipos_direcc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_vias1`
    FOREIGN KEY (`vias_idvias`)
    REFERENCES `vias` (`idvias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_vias2`
    FOREIGN KEY (`vias_idvias_sec`)
    REFERENCES `vias` (`idvias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_cardinalidades1`
    FOREIGN KEY (`cardinalidades_idcardinalidades`)
    REFERENCES `cardinalidades` (`idcardinalidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_cardinalidades2`
    FOREIGN KEY (`cardinalidades_idcardinalidadessec`)
    REFERENCES `cardinalidades` (`idcardinalidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_prefijos1`
    FOREIGN KEY (`prefijos_idprefijos`)
    REFERENCES `prefijos` (`idprefijos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_prefijos2`
    FOREIGN KEY (`prefijos_idprefijossec`)
    REFERENCES `prefijos` (`idprefijos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_direcc_ciudades1`
    FOREIGN KEY (`ciudades_idciudades` , `ciudades_departamentos_iddepartamentos`)
    REFERENCES `ciudades` (`idciudades` , `departamentos_iddepartamentos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estado_domi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estado_domi` (
  `idestado_domi` INT NOT NULL AUTO_INCREMENT,
  `nom_est_comp` VARCHAR(45) NOT NULL DEFAULT 'Nombre estado de la compra',
  PRIMARY KEY (`idestado_domi`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `domicilios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `domicilios` (
  `iddomicilios` INT NOT NULL AUTO_INCREMENT,
  `fecha_entrega_max` DATE NOT NULL,
  `fecha_entrega` TIMESTAMP NOT NULL,
  `observaación_cli` TEXT NULL,
  `obs_domiciliario` VARCHAR(45) NULL,
  `compras_idcompras` INT NOT NULL,
  `estado_domi_idestado_domi` INT NOT NULL,
  PRIMARY KEY (`iddomicilios`, `compras_idcompras`, `estado_domi_idestado_domi`),
  INDEX `fk_domicilios_compras1_idx` (`compras_idcompras` ASC) ,
  INDEX `fk_domicilios_estado_domi1_idx` (`estado_domi_idestado_domi` ASC) ,
  CONSTRAINT `fk_domicilios_compras1`
    FOREIGN KEY (`compras_idcompras`)
    REFERENCES `compras` (`idcompras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_estado_domi1`
    FOREIGN KEY (`estado_domi_idestado_domi`)
    REFERENCES `estado_domi` (`idestado_domi`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `domicilios_has_domicilios_direcc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `domicilios_has_domicilios_direcc` (
  `domicilios_iddomicilios` INT NOT NULL,
  `domicilios_compras_idcompras` INT NOT NULL,
  `domicilios_direcc_iddomicilios` INT NOT NULL,
  PRIMARY KEY (`domicilios_iddomicilios`, `domicilios_compras_idcompras`, `domicilios_direcc_iddomicilios`),
  INDEX `fk_domicilios_has_domicilios_direcc_domicilios_direcc1_idx` (`domicilios_direcc_iddomicilios` ASC) ,
  INDEX `fk_domicilios_has_domicilios_direcc_domicilios1_idx` (`domicilios_iddomicilios` ASC, `domicilios_compras_idcompras` ASC) ,
  CONSTRAINT `fk_domicilios_has_domicilios_direcc_domicilios1`
    FOREIGN KEY (`domicilios_iddomicilios` , `domicilios_compras_idcompras`)
    REFERENCES `domicilios` (`iddomicilios` , `compras_idcompras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_domicilios_has_domicilios_direcc_domicilios_direcc1`
    FOREIGN KEY (`domicilios_direcc_iddomicilios`)
    REFERENCES `domicilios_direcc` (`iddomicilios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
